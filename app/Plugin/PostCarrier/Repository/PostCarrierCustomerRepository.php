<?php
/*
 * This file is part of the PostCarrier
 *
 * Copyright(c) 2016 IPLOGIC CO.,LTD. All Rights Reserved.
 * http://www.iplogic.co.jp
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Plugin\PostCarrier\Repository;

use Doctrine\ORM\EntityRepository;
use Eccube\Common\Constant;
use Eccube\Util\Str;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Symfony\Component\Security\Core\Util\SecureRandom;

/**
 * CustomerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostCarrierCustomerRepository extends EntityRepository
{
    public $app;

    public function setApplication($app)
    {
        $this->app = $app;
    }

    //本会員 & メルマガ会員、CSV会員の検索
    public function searchMixCustomerData($arrData, $eventCondition="", $eventWhereKbn=0, $count_flg=false, $offset=null, $page_max=null, $getsql_flg=false){
        $conn = $this->app['orm.em']->getConnection();
        $customerData = array();

        $sqlArray = array();
        $whereArray = array();

        if($arrData['mail_type_web']=="1"){
            //本会員検索

            $objSelect = new SC_MDL_ECQUBELEY_CustomerList($arrData, $eventWhereKbn, $eventCondition, $this->app);
            $tmpSQL = $objSelect->getSelectSQL($arrData['mail_type'], $arrData['mail_type_c']);
            $sqlArray[]=$tmpSQL[0];
            if($tmpSQL[1]!=null) $whereArray[]=$tmpSQL[1];
        }

        if($arrData['mail_type_c']=="1"){
            // 重複排除に利用
            $customerSql = $sqlArray ? preg_replace('/^WHERE /', '', $objSelect->where) : '';
            $customerVal = $whereArray ? $whereArray[0] : array();

            //CSV会員検索
            $objSelect = new SC_MDL_ECQUBELEY_CsvCustomerList($arrData, $eventWhereKbn, $eventCondition, $customerSql, $customerVal);
            $tmpSQL = $objSelect->getSelectSQL($arrData['mail_type'],$arrData['mail_type_web']);
            $sqlArray[]=$tmpSQL[0];
            if($tmpSQL[1]!=null) $whereArray[]=$tmpSQL[1];
        }

        //SQLの生成
        $sql = "";
        for($i=0; $i < count($sqlArray); $i++){
            if($i==0){
                $sql = $sqlArray[$i];
            }else{
                $sql = $sql. " UNION ALL ".$sqlArray[$i];
            }
        }

        //SQLのパラメータ一次配列化
        $arrval = array();
        for($i=0; $i < count($whereArray); $i++){
            if($i==0){
                $arrval = $whereArray[$i];
            }else{
                $arrval = array_merge($arrval, $whereArray[$i]);
            }
        }

        $limit_offset='';
        if(!$count_flg && $page_max!==null && $offset!==null){
            $limit_offset = " LIMIT ". $page_max . " OFFSET ". $offset;
        }

        $this->printLog("LC_MDL_ECQUBELEY::searchMixCustomerData sql=".$sql);
        $this->printLog("LC_MDL_ECQUBELEY::searchMixCustomerData arrval=".print_r($arrval,true));

        if($count_flg){
            $sql2="SELECT count(*) as count FROM (".$sql.") as r1 ";

            if ($getsql_flg) {
                return array($sql2, $arrval);
            }

            $count=$conn->fetchAll($sql2, $arrval);
            return $count[0]['count'];
        }else{
            $sql.= $limit_offset;

            if ($getsql_flg) {
                return array($sql, $arrval);
            }

            $customerData = $conn->fetchAll($sql, $arrval);

            $this->printLog("LC_MDL_ECQUBELEY::searchMixCustomerData count=".count($customerData));
            return $customerData;
        }
        return $customerData;
    }

    function printLog($msg) {
        $this->app['monolog.PostCarrier']->info($msg);
    }

}
